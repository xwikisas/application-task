<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="TaskManager.IncompleteTasksService" locale="">
  <web>TaskManager</web>
  <name>IncompleteTasksService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>TaskManager.AdministrationIncompleteTasks</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>IncompleteTasksService</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($xcontext.action == 'get')
  #if ("$!request.getPages" != '')
    #set ($pagesWithIncompleteTasks = $services.task.getPagesWithIncompleteTaskMacros())
    #set ($result = [])
    #foreach ($page in $pagesWithIncompleteTasks)
      #set ($taskDoc = $xwiki.getDocument($page))
      #set ($title = $taskDoc.title)
      #if ("$title.trim()" == '')
        #if ($taskDoc.documentReference.name == 'WebHome')
          #set ($title = $taskDoc.documentReference.parent.name)
        #else
          #set ($title = $taskDoc.documentReference.name)
        #end
      #end
      #set ($pageInfo = {
        'title': $title,
        'ref': $services.rendering.escape($services.model.serialize($page), $xwiki.currentContentSyntaxId),
        'url': $xwiki.getURL($page, 'view')
      })
      #set ($discard = $result.add($pageInfo))
    #end
    $response.setContentType('application/json')
    $jsontool.serialize($result)
  #elseif ("$!request.docRef" != '' &amp;&amp; $hasAdmin &amp;&amp; $services.csrf.isTokenValid($request.form_token))
    #set ($docRef = $services.model.resolveDocument($request.docRef))
    #set ($discard = $services.task.inferTaskData($docRef))
  #elseif ("$!request.fixAll" != '' &amp;&amp; $hasAdmin &amp;&amp; $services.csrf.isTokenValid($request.form_token))
    #set ($job = $services.task.inferTaskData())
    $response.setContentType('application/json')
    $jsontool.serialize({'jobId': $job.status.request.id})
  #end
#elseif ($xcontext.action == 'view' &amp;&amp; $hasAdmin &amp;&amp; $services.csrf.isTokenValid($request.form_token))
  #template("job_macros.vm")
  #set ($job = $services.task.inferTaskData())
  {{html}}
  #displayJobStatus($job.status 'taskmanager.incompleteTasks.job.')
  {{/html}}

#end
{{/velocity}}
</content>
</xwikidoc>
