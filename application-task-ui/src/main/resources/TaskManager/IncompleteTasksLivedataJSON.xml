<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="TaskManager.IncompleteTasksLivedataJSON" locale="">
  <web>TaskManager</web>
  <name>IncompleteTasksLivedataJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>TaskManager.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>IncompleteTasksLivedataJSON</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="XWiki.LiveTableResultsMacros" /}}

{{velocity wiki="false"}}
## Copy this to AdministrationIncompleteTasks when 3.3 version is ~1 year.
#*#set ($liveDataConfig = {
  'meta': {
    'propertyDescriptors': [
      { 'id': 'fix_action', 'displayer': 'html', 'filterable': 'false'}
    ]
  }
})
{{liveData
  id='confluenceMigrations'
  source='liveTable'
  sourceParameters="resultPage=TaskManager.IncompleteTasksLivedataJSON&amp;className=TaskManager.TaskManagerClass&amp;translationPrefix=someprefix"
  properties="owner,doc.title,fix_action"
  sort='doc.name:asc'}}$jsontool.serialize($liveDataConfig){{/liveData}}
  *#
#if($xcontext.action == 'get' &amp;&amp; "$!{request.outputSyntax}" == 'plain')
  #macro (getFixAction $reference)
  &lt;a class="fixPageTasks action" 
    data-url="$escapetool.xml($xwiki.getURL($reference, 'get'))" 
    title="$escapetool.xml($services.localization.render('taskmanager.incompleteTasks.livetable._actions.fix'))" href="#"&gt;
    &lt;span class="action-icon"&gt;$services.icon.renderHTML('wrench')&lt;/span&gt;
    &lt;span class="action-label"&gt;$escapetool.xml($services.localization.render('taskmanager.incompleteTasks.livetable._actions.fix'))&lt;/span&gt;
  &lt;/a&gt;
  #end
  $response.setContentType('application/json')
  #set($extraFrom = " ,LargeStringProperty as reporter ")
  #set($extraWhere = " and obj.id=reporter.id.id and reporter.id.name='reporter' and reporter.value = ''")
  #set($extraFrom = "${extraFrom}, StringProperty as owner")
  #set($extraWhere = "${extraWhere} and obj.id=owner.id.id and owner.id.name='owner' and owner.value &lt;&gt; '' ")
  ##$request.parameters
  #set($map = {})
  #gridresultwithfilter_buildJSON("$!request.classname" $request.collist.split(',') $extraFrom $extraWhere {} $map)
  ## Add the status of the executed/executing job.
  #foreach($row in $map.get('rows'))
    #set ($ownerRef = $services.model.resolveDocument($row.get('owner_value')))
    #set ($fixAction = "#getFixAction($ownerRef)")
    #set ($discard = $row.put('fix_action', $fixAction))
  #end
  $jsontool.serialize($map)
#end
{{/velocity}}</content>
</xwikidoc>
