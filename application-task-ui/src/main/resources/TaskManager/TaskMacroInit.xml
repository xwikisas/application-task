<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="TaskManager.TaskMacroInit" locale="">
  <web>TaskManager</web>
  <name>TaskMacroInit</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>TaskManager.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>TaskMacroInit</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>TaskManager.TaskMacroInit</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>3596e3bc-27c9-4793-b910-cfcad228b23c</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'moment-jdateformatparser': "$services.webjars.url('moment-jdateformatparser', 'moment-jdateformatparser.min')"
  }
});
define('xwiki-task-notification-messages', {
  prefix: 'taskmanager.notification.',
  keys: [
    'referenceGeneration.fail',
    'referenceGeneration.inprogress'
  ]
});
require(['jquery', 'xwiki-l10n!xwiki-task-notification-messages', 'xwiki-meta', 'moment', 'moment-jdateformatparser'], function ($, l10n, xm, moment) {
  let initCompleteDate = function () {
    // TODO: Replace 'Done' with an user configurable value.
    if ($(this).val() == 'Done') {
      if (!$('.modal :input[name="completeDate"]').val()) {
        var dateFormat = moment().toMomentFormatString($('.modal').find("input[name='reference']").data('dateformat'));
        $('.modal :input[name="completeDate"]').val(moment(new Date()).format(dateFormat)).prop('disabled', false);
      }
    } else {
      $('.modal :input[name="completeDate"]').val('').prop('disabled', true);
    }
  };
  let init = function () {
    let isTaskMacroModal = !!$('.task-reference').length;
    if (isTaskMacroModal) {
      let modal = $('.modal');
      let idInput = modal.find("input[name='reference']");
      $('.modal select[name="status"]').each(initCompleteDate)
      if (idInput.val()) return;
      let refGenURL = XWiki.currentDocument.getRestURL() + '/task-reference';
      idInput.prop('disabled', true);
      idInput.addClass('loading');
      modal.find('.btn-primary').prop('disabled', true);
      let not = new XWiki.widgets.Notification(l10n.get('referenceGeneration.inprogress'), 'inprogress');
      $.ajax({
        url: refGenURL,
        method: 'GET',
        dataType: 'text'
      })
        .done(function (ref) {
          not.hide();
          idInput.val(ref);
        })
        .fail(function (response) {
          not.replace(new XWiki.widgets.Notification(l10n.get('referenceGeneration.fail'), 'error'));
        })
        .always(function () {
          idInput.prop('disabled', false);
          idInput.removeClass('loading');
          modal.find('.btn-primary').prop('disabled', false);
        });
      let createDateInput = modal.find("input[name='createDate']");
      let creatorInput = modal.find("input[name='reporter']");
      var dateFormat = moment().toMomentFormatString($(idInput).data('dateformat'));
      createDateInput.val(moment(new Date()).format(dateFormat));
      let creatorValue = xm.userReference.relativeTo(new XWiki.WikiReference(XWiki.currentWiki)).toString();
      creatorInput.val(creatorValue);
    }
  };
  init();
  $(document).on('shown.bs.modal', '.modal', init);
  // Create a relationship between status and completeDate fields.
  $(document).on('change', '.modal select[name="status"]', initCompleteDate);
});
</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
