<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="TaskManager.GanttMacro.Macro" locale="">
  <web>TaskManager.GanttMacro</web>
  <name>Macro</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>xwiki:TaskManager.GanttMacro.Macro</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Macro</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{taskgantt/}}</content>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>20ebfcab-84f8-4525-b1b5-c053c1e425f0</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#if("$!request.minify" == 'false')
  #set($frappe_js_path = $services.webjars.url('org.webjars.npm:frappe-gantt', "dist/frappe-gantt.js"))
#else
  #set($frappe_js_path = $services.webjars.url('org.webjars.npm:frappe-gantt', "dist/frappe-gantt.min.js"))
#end

const frappe_js_path = "$frappe_js_path";
const jsonSourceURL = "${xwiki.getDocument('TaskManager.GanttMacro.JSONTaskSource').getURL('get')}?xpage=plain&amp;outputSyntax=plain";
const updateServiceURL = "$xwiki.getURL('TaskManager.GanttMacro.UpdateService')?xpage=plain&amp;outputSyntax=plain&amp;";

const readonlyError = "$escapetool.html($services.localization.render('taskmanager.gantt.taskEdit.error.readonly'))";
const permissionError = "$escapetool.html($services.localization.render('taskmanager.gantt.taskEdit.error.permissions'))";
const successMessage = "$escapetool.html($services.localization.render('taskmanager.gantt.taskEdit.success'))";
const genericError = "$escapetool.html($services.localization.render('taskmanager.gantt.taskEdit.error.generic'))";
const noDueDateMessage = "$escapetool.html($services.localization.render('taskmanager.gantt.task.noDueDate'))";

const XWikiLocale = "$xwiki.getLocalePreference()";</code>
    </property>
    <property>
      <name>Define constants</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>25ed597a-40df-4228-8855-fa197ce65ceb</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', frappe_js_path], function(jQuery){
  // Add custom popup and the custom svg markup when rendering Gantt
  if(Gantt.prototype['_render'] === undefined) {
    function setupProgressPopup(ganttObj) {
      let ganttDiv = ganttObj.$svg.parentNode.parentNode;
      let popup = jQuery('div.gantt-popup', ganttDiv);
      if(popup.length &gt; 0) {
        popup = popup[0];
      } else {
        popup = document.createElement('div');
        popup.innerHTML = `
          &lt;span class='popuptext'&gt;Progress: &lt;span id="gantt-popup-progress-number"&gt;100&lt;/span&gt;%&lt;/span&gt;
        `;
        popup.classList.add('gantt-popup');
        ganttDiv.appendChild(popup);
      }
      // Set up popup event listeners
      let progressChangeObserver;
      let _hoverTimer;
      let is_resizing_progress = false;

      function showPopup(barElem) {
        if (is_resizing_progress) return;
        const viewport = ganttDiv.getBoundingClientRect();
        function normalizeDims(elem) {
          return {
            x:(elem.x - viewport.x),
            y:(elem.y - viewport.y),
            width:elem.width,
            height:elem.height,
          };
        }
        let bar = ganttObj.bars.find((b) =&gt; b.group === barElem)
        const b = normalizeDims(bar.$bar.getBoundingClientRect());
        const pop = normalizeDims(popup.getBoundingClientRect());
        let y = b.y - pop.height - 5;
        let x = b.x + (b.width - pop.width) / 2;
        popup.style.top  = y + 'px';
        popup.style.left = x + 'px';
        let popupNumber = jQuery('#gantt-popup-progress-number', popup)[0]
        popupNumber.innerHTML = bar.compute_progress();
        popup.style.visibility = 'visible';
        if(progressChangeObserver) {
          progressChangeObserver.disconnect();
        }
        progressChangeObserver = new MutationObserver(() =&gt; {popupNumber.innerHTML = bar.compute_progress();});
        progressChangeObserver.observe(bar.$bar_progress, {attributes:true});
      }
      function hidePopup() {
        if (is_resizing_progress) return;
        popup.style.visibility = 'hidden';
        if(progressChangeObserver) {
          progressChangeObserver.disconnect();
        }
      }
      jQuery('.handle.progress', ganttDiv).on({
        mousedown: function(e) {
          let bar = e.delegateTarget.parentElement.parentElement;
          showPopup(bar);
          is_resizing_progress = true;
        }
      });
      jQuery(ganttDiv).on({
        mouseup: function(e) {
          is_resizing_progress = false;
          hidePopup();
        }
      });

      jQuery('.bar-wrapper', ganttDiv).on({
        mouseenter: function(e) {
          let bar = e.currentTarget;
          if(!_hoverTimer) {
            _hoverTimer = setTimeout(() =&gt; {
              showPopup(bar);
            }, 1000);
          }
        },
        mouseleave: function(e) {
          clearTimeout(_hoverTimer);
          _hoverTimer = null;
          hidePopup();
        },
        mousedown: function(e) {
          clearTimeout(_hoverTimer);
          _hoverTimer = null;
          hidePopup();
        }
      });
    }
    function addStyles(svgElem) {
      var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');
      defs.innerHTML += `
    &lt;linearGradient id="fadeGrad" fill="white"&gt;
      &lt;stop offset="30%" stop-color="white" stop-opacity="1" /&gt;
      &lt;stop offset="60%" stop-color="white" stop-opacity=".4" /&gt;
      &lt;stop offset="100%" stop-color="white" stop-opacity="0" /&gt;
    &lt;/linearGradient&gt;
    &lt;mask id="fademask" maskContentUnits="objectBoundingBox"&gt;
      &lt;rect width="1" height="1" fill="url(#fadeGrad)"/&gt;
    &lt;/mask&gt;

    &lt;filter id="rounded-corners" x="-2.5%" width="105%" y="-5%" height="110%"&gt;
      &lt;feFlood flood-color="rgba(255,60,60)"/&gt;
      &lt;feGaussianBlur stdDeviation="4"/&gt;
      &lt;feComponentTransfer&gt;
        &lt;feFuncA type="table"tableValues="0 0 0 1"/&gt;
      &lt;/feComponentTransfer&gt;
      &lt;feComponentTransfer&gt;
        &lt;feFuncA type="table"tableValues="0 1 1 1 1 1 1 1"/&gt;
      &lt;/feComponentTransfer&gt;
      &lt;feComposite operator="over" in="SourceGraphic"/&gt;
    &lt;/filter&gt;
    `;
      svgElem.setAttribute('height', svgElem.getAttribute('height') - 100);
      svgElem.appendChild(defs);
    }
    Gantt.prototype['_render'] = Gantt.prototype['render'];
    Gantt.prototype['render'] = function() {
      const result = this._render();
      addStyles(this.$svg);
      setupProgressPopup(this);
      return result;
    };
  }
  // Fix hour text display
  if(Gantt.prototype['_get_date_info'] === undefined) {
    Gantt.prototype['_get_date_info'] = Gantt.prototype['get_date_info'];
    Gantt.prototype['get_date_info'] = function(date, last_date, i) {
      let result = this._get_date_info(date, last_date, i);
      const base_pos = {
          x: i * this.options.column_width,
          lower_y: this.options.header_height,
          upper_y: this.options.header_height - 25,
      };

      const x_pos = {
          'Quarter Day_lower': (this.options.column_width * 4),
          'Quarter Day_upper': (this.options.column_width * 4) / 2,
          'Half Day_lower': (this.options.column_width * 2),
          'Half Day_upper': (this.options.column_width * 2) / 2,
          Day_lower: this.options.column_width / 2,
          Day_upper: (this.options.column_width * 30) / 2,
          Week_lower: 0,
          Week_upper: (this.options.column_width * 4) / 2,
          Month_lower: this.options.column_width * 1.5,
          Month_upper: (this.options.column_width * 12) / 2,
          Year_lower: this.options.column_width / 2,
          Year_upper: (this.options.column_width * 30) / 2,
      };
      const tweakedPos = {
          upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],
          upper_y: base_pos.upper_y,
          lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],
          lower_y: base_pos.lower_y,
      };
      Object.assign(result, tweakedPos);
      return result;
    };
  }
  // Don't move dependencies when moving a task
  if(Gantt.prototype['_bind_bar_events'] === undefined) {
    Gantt.prototype['_bind_bar_events'] = Gantt.prototype['bind_bar_events'];
    Gantt.prototype['bind_bar_events'] = function() {
      on = (element, event, selector, callback) =&gt; {
        if (!callback) {
          callback = selector;
          event.split(/\s+/).forEach(function (event) {
            element.addEventListener(event, callback);
          });
        } else {
          element.addEventListener(event, function (e) {
            const delegatedTarget = e.target.closest(selector);
            if (delegatedTarget) {
              e.delegatedTarget = delegatedTarget;
              callback.call(this, e, delegatedTarget);
            }
          });
        }
      };

      closest = (selector, element) =&gt; {
        if (!element) return null;

        if (element.matches(selector)) {
          return element;
        }

        return closest(selector, element.parentNode);
      };

      let is_dragging = false;
      let x_on_start = 0;
      let y_on_start = 0;
      let is_resizing_left = false;
      let is_resizing_right = false;
      let parent_bar_id = null;
      let bars = []; // instanceof Bar
      this.bar_being_dragged = null;

      function action_in_progress() {
        return is_dragging || is_resizing_left || is_resizing_right;
      }

      on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) =&gt; {
        const bar_wrapper = closest('.bar-wrapper', element);

        if (element.classList.contains('left')) {
          is_resizing_left = true;
        } else if (element.classList.contains('right')) {
          is_resizing_right = true;
        } else if (element.classList.contains('bar-wrapper')) {
          is_dragging = true;
        }

        bar_wrapper.classList.add('active');

        x_on_start = e.offsetX;
        y_on_start = e.offsetY;

        parent_bar_id = bar_wrapper.getAttribute('data-id');
        bars = [this.get_bar(parent_bar_id)];

        this.bar_being_dragged = parent_bar_id;

        bars.forEach((bar) =&gt; {
          const $bar = bar.$bar;
          $bar.ox = $bar.getX();
          $bar.oy = $bar.getY();
          $bar.owidth = $bar.getWidth();
          $bar.finaldx = 0;
        });
      });

      on(this.$svg, 'mousemove', (e) =&gt; {
        if (!action_in_progress()) return;
        const dx = e.offsetX - x_on_start;
        e.offsetY - y_on_start;

        bars.forEach((bar) =&gt; {
          const $bar = bar.$bar;
          $bar.finaldx = this.get_snap_position(dx);
          this.hide_popup();
          if (is_resizing_left) {
            if (parent_bar_id === bar.task.id) {
              bar.update_bar_position({
                x: $bar.ox + $bar.finaldx,
                width: $bar.owidth - $bar.finaldx,
              });
            } else {
              bar.update_bar_position({
                x: $bar.ox + $bar.finaldx,
              });
            }
          } else if (is_resizing_right) {
            if (parent_bar_id === bar.task.id) {
              bar.update_bar_position({
                width: $bar.owidth + $bar.finaldx,
              });
            }
          } else if (is_dragging) {
            bar.update_bar_position({ x: $bar.ox + $bar.finaldx });
          }
        });
      });

      document.addEventListener('mouseup', (e) =&gt; {
        if (is_dragging || is_resizing_left || is_resizing_right) {
          bars.forEach((bar) =&gt; bar.group.classList.remove('active'));
        }

        is_dragging = false;
        is_resizing_left = false;
        is_resizing_right = false;
      });

      jQuery(document).on('mouseup', (e) =&gt; {
        this.bar_being_dragged = null;
        bars.forEach((bar) =&gt; {
          const $bar = bar.$bar;
          if (!$bar.finaldx) return;
          bar.date_changed();
          $bar.finaldx = 0;
          bar.set_action_completed();
        });
      });

      this.bind_bar_progress();
    };
  }
});</code>
    </property>
    <property>
      <name>Customize gantt library</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use/>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>237bceb9-bb38-4c3f-89df-2cdaa31d82d3</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>function updateService(task) {
  return updateServiceURL;
  //return new XWiki.Document(XWiki.Model.resolve(task.id, XWiki.EntityType.DOCUMENT)).getRestURL('objects/TaskManager.TaskManagerClass/0');
}

function getJsonSourceQuery(ganttDiv) {
  let query = '';
  ganttDiv = jQuery(ganttDiv);
  if (undefined !== ganttDiv.data('assignees')) {
    query += '&amp;assignees=' + ganttDiv.data('assignees');
  }
  if (undefined !== ganttDiv.data('reporters')) {
    query += '&amp;reporters=' + ganttDiv.data('reporters');
  }
  if (undefined !== ganttDiv.data('projects')) {
    query += '&amp;projects=' + ganttDiv.data('projects');
  }
  if (undefined !== ganttDiv.data('spaces')) {
    query += '&amp;spaces=' + ganttDiv.data('spaces');
  }
  if (undefined !== ganttDiv.data('date-to')) {
    query += '&amp;to=' + ganttDiv.data('date-to');
  }
  if (undefined !== ganttDiv.data('date-from')) {
    query += '&amp;from=' + ganttDiv.data('date-from');
  }
  if (undefined !== ganttDiv.data('hide-no-due-date')) {
    query += '&amp;hideNoDueDate=' + ganttDiv.data('hide-no-due-date');
  }
  return query;
}

function forbiddenEdit(task, gantt) {
  let msg = null;
  if(jQuery(gantt.$svg).parent().data('readonly')) {
    msg = readonlyError;
  } else if (task.custom_class.split(/\s+/).includes('taskgantt-no-edit')){
    msg = permissionError;
  }
  return msg;
}

function formatTask(task) {
  if(task.custom_class.split(/\s+/).includes('taskgantt-no-due-date')) {
    task.name = escapeHTML(task.actualName) + ' - ' + noDueDateMessage;
  } else {
    task.name = escapeHTML(task.actualName);
  }
  if(!(task.start instanceof Date))
    task.start = new Date(task.start);
  if(!(task.end instanceof Date))
    task.end = new Date(task.end);
  task.editHack = {
    oldProgress:task.progress,
    oldStartDate:new Date(task.start),
    oldEndDate:new Date(task.end),
  };
}

function changeView(button) {
  const idx = parseInt(button.parentNode.parentNode.getAttribute('id').substring('gantt'.length))
  gantts[idx].change_view_mode(button.value);
}
function setGanttDisabledOverlay(gantt, visible) {
  jQuery('.taskgantt-noedit-overlay', gantt.$svg.parentNode.parentNode).attr('style', 'visibility:' + (visible ? 'visible' : 'hidden') + ';');
}
function escapeHTML(originalString) {
  return originalString.replace(/&amp;/g, '&amp;amp;')
    .replace(/&lt;/g, '&amp;lt;')
    .replace(/&gt;/g, '&amp;gt;')
    .replace(/"/g, '&amp;quot;')
    .replace(/'/g, '&amp;#39;');
}
function unescapeHTML(originalString) {
  return originalString.replace('&amp;amp;', /&amp;/g)
    .replace('&amp;lt;', /&lt;/g)
    .replace('&amp;gt;', /&gt;/g)
    .replace('&amp;quot;', /"/g)
    .replace('&amp;#39;', /'/g);
}

function revertBar(task, gantt) {
  // Only revert to previous state
  task.start = task.editHack.oldStartDate;
  task.end = task.editHack.oldEndDate;
  task.progress = task.editHack.oldProgress;

  let bar = gantt.bars.find((bar) =&gt; bar.task === task);
  bar.update_bar_position({x:bar.$bar.ox, width: bar.$bar.owidth});

  // manually reset progress width change, double click event doesn't trigger otherwise
  bar.$bar_progress.finaldx = 0;
  bar.update_handle_position();
}
function redrawBar(task, gantt) {
  // Update task and position
  if (task.custom_class.split(/\s+/).includes('taskgantt-no-due-date')) {
    task.custom_class = task.custom_class.split(/\s+/).filter((t) =&gt; t != 'taskgantt-no-due-date').join(' ');
  }
  formatTask(task); // rename if taskgantt-no-due-date, update old dates
  let bar = gantt.bars.find((b) =&gt; b.task === task);
  bar.update_bar_position({x:bar.compute_x()});
  bar.group.setAttribute('class', 'bar-wrapper ' + (task.custom_class || ''));
  bar.bar_group.getElementsByClassName('bar-label')[0].innerHTML = task.name;

  // manually reset progress width change, double click event doesn't trigger otherwise
  bar.$bar_progress.finaldx = 0;
  bar.update_handle_position();
}</code>
    </property>
    <property>
      <name>Function definitions</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use/>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>3</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>fef48bca-1806-4d62-80e9-fb44303d2cda</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>if (!gantts) {
  var gantts = [];
  async function spawnGantt(ganttDiv, idx) {
    console.log(ganttDiv, idx)
    jQuery(ganttDiv).attr('id', 'gantt' + idx);
    return fetch(jsonSourceURL + getJsonSourceQuery(ganttDiv)).then(response =&gt; response.json()).then(tasks =&gt; {
      if(tasks.length == 0) {
        jQuery(ganttDiv).append(`
        &lt;div class='box'&gt;Gantt: No tasks to show.&lt;/div&gt;
        `);
        return;
      }
      tasks.forEach(formatTask);
      tasks.forEach((task) =&gt; {
        // If the dependencies of this task are not present in this diagram, remove them (else the Gantt breaks)
        let dependencies = task.dependencies.filter((dep) =&gt; tasks.any((t) =&gt; (t.id == dep)));
        task.dependencies = dependencies;
      });
      console.log(tasks);
      let gantt = new Gantt(ganttDiv, tasks, {
        view_mode_select: true,
        view_mode: 'Day',
        popup_trigger: null,
        padding: 10,
        language: XWikiLocale,
        on_click: function (task) {
          window.open(task.link).focus();
        },
        on_progress_change: function (task, newProgress) {
          if (newProgress == task.editHack.oldProgress) {
            // useless progress change (event fires on any click, quirk of frappe-gantt)
            return;
          }
          let forbiddenEditReason = forbiddenEdit(task, gantts[idx]);
          if (forbiddenEditReason != null) {
            revertBar(task, gantts[idx]);
            new XWiki.widgets.Notification(forbiddenEditReason, 'error', '20');
            return;
          }

          let params = {
            taskDocument: task.id,
            progress: newProgress
          };
          if(task.custom_class.split(/\s+/).includes('taskgantt-no-due-date')) {
            params.startDate = task.start.getTime();
            params.endDate = task.end.getTime();
          }
          setGanttDisabledOverlay(gantts[idx], true);
          jQuery.ajax( updateService(task) + new URLSearchParams(params) ).success(function(data) {
            redrawBar(task, gantts[idx]);
            setGanttDisabledOverlay(gantts[idx], false);
            new XWiki.widgets.Notification(successMessage, 'info', '20');
          }).error(e =&gt; {
            console.log('Error when updating progress:', e);
            revertBar(task, gantts[idx]);
            setGanttDisabledOverlay(gantts[idx], false);
            new XWiki.widgets.Notification(escapeHTML(e.responseJSON.description), 'error', '20');
          });
        },
        on_view_change: function(mode) {
          //empty
        },
        on_date_change: function (task, newStartDate, newEndDate) {
          // (Frappe automatically subtracts 1s from the real end date)
          newEndDate.setSeconds(newEndDate.getSeconds() + 1);
          if (newStartDate.getTime() == task.editHack.oldStartDate.getTime() &amp;&amp;
              newEndDate.getTime() == task.editHack.oldEndDate.getTime()) {
            // Useless progress change (event fires on any click, quirk of frappe-gantt)
            return;
          }
          let forbiddenEditReason = forbiddenEdit(task, gantts[idx]);
          if (forbiddenEditReason != null) {
            revertBar(task, gantts[idx]);
            new XWiki.widgets.Notification(forbiddenEditReason, 'error', '20');
            return;
          }
          let params = {
            taskDocument: task.id,
          };
          // Manually set minutes and seconds since frappe gantt rounds to fixed hours
          newStartDate.setSeconds(task.editHack.oldStartDate.getSeconds());
          newStartDate.setMinutes(task.editHack.oldStartDate.getMinutes());
          if(newStartDate.getTime() != task.editHack.oldStartDate.getTime()) {
            params.startDate = newStartDate.getTime();
          }
          newEndDate.setSeconds(task.editHack.oldEndDate.getSeconds());
          newEndDate.setMinutes(task.editHack.oldEndDate.getMinutes());
          if(newEndDate.getTime() != task.editHack.oldEndDate.getTime()) {
            params.endDate = newEndDate.getTime();
          }
          setGanttDisabledOverlay(gantts[idx], true);
          jQuery.ajax( updateService(task) + new URLSearchParams(params) ).success(function(data) {
            redrawBar(task, gantts[idx]);
            new XWiki.widgets.Notification(successMessage, 'info', '20');
            setGanttDisabledOverlay(gantts[idx], false);
          }).error(e =&gt; {
            revertBar(task, gantts[idx]);
            console.log('Error when updating dates:', e);
            new XWiki.widgets.Notification(escapeHTML(e.responseJSON.description), 'error', '20');
            setGanttDisabledOverlay(gantts[idx], false);
          });
        },
      });
      // Don't enforce 'task must start after dependencies' rule
      if(gantt.bars[0].__proto__['_update_bar_position'] === undefined) {
        gantt.bars[0].__proto__['_update_bar_position'] = gantt.bars[0].__proto__['update_bar_position'];
        gantt.bars[0].__proto__['update_bar_position'] = function ({ x = null, width = null }) {
          const bar = this.$bar;
          if (x) {
            this.update_attr(bar, 'x', x);
          }
          if (width &amp;&amp; width &gt;= this.gantt.options.column_width) {
            this.update_attr(bar, 'width', width);
          }
          this.update_label_position();
          this.update_handle_position();
          this.update_progressbar_position();
          this.update_arrow_position();
        }
      }
      return gantt;
    });
  }
  require(['jquery', frappe_js_path], function(jQuery){
     Promise.all(jQuery.map(jQuery('.taskgantt'), spawnGantt)).then(data =&gt; gantts = data);
  });
}</code>
    </property>
    <property>
      <name>Spawn frappe-gantt</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use/>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>d0ae2c28-2352-4c27-88c8-2f7931d74a5c</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.taskgantt {
  position:relative;
  overflow:hidden;
}

.gantt {
  .tick {
    fill: @xwiki-border-color;
    stroke-width: 0.4;
  }
  .tick.thick {
    stroke-width: 2;
  }
  .grid-row {
    fill: @xwiki-page-content-bg;
  }
  .grid-row:nth-child(even) {
    fill: @nav-link-hover-bg;
  }
  .bar-label {
    fill: @text-color;
    font-weight: bold;
  }
  .bar-wrapper:hover.taskgantt-status-ToDo .bar-progress {
    fill: @brand-warning;
  }
  .bar-wrapper.taskgantt-status-Done .bar-progress {
    fill: @brand-success;
  }
  .bar-wrapper.taskgantt-status-InProgress {
    fill: @brand-info;
  }
  .bar-wrapper.taskgantt-no-due-date text, .gantt .bar-wrapper.taskgantt-no-due-date text.big {
    filter:url(#rounded-corners);
    fill:@nav-link-hover-bg;
  }
  .bar-wrapper.taskgantt-no-due-date .bar, .gantt .bar-wrapper.taskgantt-no-due-date .bar-progress {
    mask: url('#fademask');
  }
}

.gantt-popup {
  width:10em;
  height:2em;
  position:absolute;
  overflow:visible;
  visibility:hidden;

  .popuptext {
    width: 100%;
    height: 100%;
    background-color: @navbar-default-bg;
    color: @nav-link-hover-bg;
    text-align: center;
    border-radius: 6px;
    padding: 3% 0;
    position: absolute;
    z-index: 2;
  }

  .popuptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    transform: rotate(45deg) translate(-40%, -40%);
    background-color: @navbar-default-bg;
    height: 7px;
    width: 7px;
  }
}
.taskgantt-noedit-overlay {
  position:absolute;
  visibility:hidden;
  height:100%;
  width:100%;
  z-index: 3;
  left:0;
  top:0;
  background-color: fade(@navbar-default-bg, 60%);
  display:flex;
  justify-content:center;
  span {
    color: @nav-link-hover-bg;
    font-weight: bold;
    align-self:center;
    font-size:2em;
  }
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>Override Frappe Gantt styles</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>0</number>
    <className>XWiki.WikiMacroClass</className>
    <guid>f1941f8a-9d1a-4d4a-b2b3-e332d10ab507</guid>
    <class>
      <name>XWiki.WikiMacroClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>13</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>14</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>, </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>action=Action|doc.reference=Document|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.parameters=Request parameters|request.url=Request URL|request.wiki=Request wiki|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>12</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <code>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>code</name>
        <number>10</number>
        <prettyName>Macro code</prettyName>
        <rows>20</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentDescription>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>contentDescription</name>
        <number>9</number>
        <prettyName>Content description (Not applicable for "No content" type)</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </contentDescription>
      <contentJavaType>
        <cache>0</cache>
        <defaultValue>Unknown</defaultValue>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <freeText>allowed</freeText>
        <largeStorage>1</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentJavaType</name>
        <number>8</number>
        <picker>1</picker>
        <prettyName>Macro content type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Unknown|Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentJavaType>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>7</number>
        <prettyName>Macro content availability</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Optional|Mandatory|No content</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <defaultCategory>
        <disabled>0</disabled>
        <name>defaultCategory</name>
        <number>4</number>
        <prettyName>Default category</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultCategory>
      <description>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>description</name>
        <number>3</number>
        <prettyName>Macro description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <id>
        <disabled>0</disabled>
        <name>id</name>
        <number>1</number>
        <prettyName>Macro id</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </id>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Macro name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <priority>
        <disabled>0</disabled>
        <name>priority</name>
        <number>11</number>
        <numberType>integer</numberType>
        <prettyName>Priority</prettyName>
        <size>10</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
      </priority>
      <supportsInlineMode>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>supportsInlineMode</name>
        <number>5</number>
        <prettyName>Supports inline mode</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </supportsInlineMode>
      <visibility>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>visibility</name>
        <number>6</number>
        <prettyName>Macro visibility</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Current User|Current Wiki|Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </visibility>
    </class>
    <property>
      <async_cached>0</async_cached>
    </property>
    <property>
      <async_context/>
    </property>
    <property>
      <async_enabled>0</async_enabled>
    </property>
    <property>
      <code>{{velocity}}
#set ($mainReference = $services.model.createDocumentReference('', 'TaskManager', 'TaskManagerClass'))
#if (!$services.licensing.licensor.hasLicensureForEntity($mainReference))
  {{missingLicenseMessage extensionName="taskmanager.extension.name"/}}
#else
  #set($discard = $xwiki.linkx.use(
      $services.webjars.url('org.webjars.npm:frappe-gantt', 'dist/frappe-gantt.css'),
      {'type': 'text/css', 'rel': 'stylesheet'}
  ))
  #set($discard = $xwiki.ssx.use('TaskManager.GanttMacro.Macro')) ## Override default frappe styles
  #set($discard = $xwiki.jsx.use('TaskManager.GanttMacro.Macro')) ## Spawn gantt, Override default frappe styles for svg styles/patterns
  #set($dateFormat = $services.datemacro.configuration.storageDateFormat)
  #set($dateTimeFormatter = $xwiki.jodatime.getDateTimeFormatterForPattern($dateFormat))
  #set($diagramIsReadonly = !("$!xcontext.macro.params.readonly" == 'false'))


{{html}}
&lt;div class='taskgantt'
  data-readonly="$diagramIsReadonly"
  #if ($xcontext.macro.params.from)
    data-date-from="$escapetool.html($xwiki.jodatime.dateTime.parse($xcontext.macro.params.from, $dateTimeFormatter).getMillis())"
  #end
  #if ($xcontext.macro.params.to)
    data-date-to="$escapetool.html($xwiki.jodatime.dateTime.parse($xcontext.macro.params.to, $dateTimeFormatter).getMillis())"
  #end
  #if ($xcontext.macro.params.hideNoDueDate)
    data-hide-no-due-date="$escapetool.html($xcontext.macro.params.hideNoDueDate)"
  #end
  #if ($xcontext.macro.params.projects)
    data-projects="$escapetool.html($xcontext.macro.params.projects)"
  #end
  #if ($xcontext.macro.params.assignees)
    data-assignees="$escapetool.html($xcontext.macro.params.assignees)")
  #end
  #if ($xcontext.macro.params.reporters)
    data-reporters="$escapetool.html($xcontext.macro.params.reporters)")
  #end
  #if ($xcontext.macro.params.spaces)
    data-spaces="${escapetool.html($xcontext.macro.params.spaces).replace('\','%5C')}")
  #end
&gt;
&lt;h5&gt;&lt;b&gt;$escapetool.html($services.localization.render('taskmanager.gantt.interface.title'))&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;
&lt;p&gt;
#if ("$xcontext.macro.params.hideNoDueDate" == 'false')
  $escapetool.html($services.localization.render('taskmanager.gantt.interface.hideNoDueDate_1'))
#else
  $escapetool.html($services.localization.render('taskmanager.gantt.interface.hideNoDueDate_0'))
#end
&lt;/p&gt;
#if ($xcontext.macro.params.from)&lt;span&gt;&lt;b&gt;$escapetool.html($services.localization.render('taskmanager.gantt.interface.date.from'))&lt;/b&gt; ${escapetool.html($xcontext.macro.params.from)}&lt;/span&gt; #end
#if ($xcontext.macro.params.to)&lt;span&gt;&lt;b&gt;$escapetool.html($services.localization.render('taskmanager.gantt.interface.date.to'))&lt;/b&gt; ${escapetool.html($xcontext.macro.params.to)}&lt;/span&gt;#end
#if ($xcontext.macro.params.assignees)
&lt;p&gt;&lt;b&gt;$escapetool.html($services.localization.render('taskmanager.gantt.interface.assignees'))&lt;/b&gt;
  #foreach($assignee in $xcontext.macro.params.assignees.split('(?&lt;!\\),'))
    &lt;span class='xwiki-mention'&gt;$xwiki.getUserName($assignee)&lt;/span&gt;
  #end
&lt;/p&gt;
#end
#if ($xcontext.macro.params.spaces)
&lt;p&gt;&lt;b&gt;$escapetool.html($services.localization.render('taskmanager.gantt.interface.spaces'))&lt;/b&gt;
  #foreach($space in $xcontext.macro.params.spaces.split('(?&lt;!\\),'))
    &lt;a class='xwiki-mention' href="$xwiki.getDocument($space, '').getURL()"&gt;$escapetool.html($space.replace('\,',','))&lt;/a&gt;
  #end
&lt;/p&gt;
#end
#if ($xcontext.macro.params.projects)
&lt;p&gt;&lt;b&gt;$escapetool.html($services.localization.render('taskmanager.gantt.interface.projects'))&lt;/b&gt;
  #foreach($project in $xcontext.macro.params.projects.split('(?&lt;!\\),'))
    &lt;span class='xwiki-mention'&gt;$escapetool.html($project.replace('\,',','))&lt;/span&gt;
  #end
&lt;/p&gt;
#end
&lt;/p&gt;
#macro (viewModeButton $viewMode)
  &lt;input class='button' type='button' onclick="changeView(this)" value="$viewMode"&gt;
#end
&lt;form id='view-mode-buttons'&gt;
  #viewModeButton('Quarter Day')
  #viewModeButton('Half Day')
  #viewModeButton('Day')
  #viewModeButton('Week')
  #viewModeButton('Month')
  #viewModeButton('Year')
&lt;/form&gt;
  &lt;div class='taskgantt-noedit-overlay'&gt;&lt;span&gt;
    $escapetool.html($services.localization.render('taskmanager.gantt.interface.wait'))
  &lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
{{/html}}
#end
{{/velocity}}</code>
    </property>
    <property>
      <contentDescription/>
    </property>
    <property>
      <contentJavaType/>
    </property>
    <property>
      <contentType>No content</contentType>
    </property>
    <property>
      <defaultCategory/>
    </property>
    <property>
      <description>Display the Tasks from the Task Manager Application in a gantt diagram.</description>
    </property>
    <property>
      <id>taskgantt</id>
    </property>
    <property>
      <name>Gantt Diagram</name>
    </property>
    <property>
      <priority/>
    </property>
    <property>
      <supportsInlineMode>0</supportsInlineMode>
    </property>
    <property>
      <visibility>Current Wiki</visibility>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>0</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>d8cfcc42-1da4-4ee0-b768-fff9a98938af</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>Only show tasks which started after the specified date.</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>from</name>
    </property>
    <property>
      <type>com.xwiki.date.DateType</type>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>1</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>d437a729-785d-4661-9634-06c146e4919b</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>Only show Tasks assigned to these Users. Comma separated format: "XWiki.User1,XWiki.User2"</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>assignees</name>
    </property>
    <property>
      <type>com.xwiki.task.UserReferenceList</type>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>2</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>3723e1b2-9d58-409a-8c62-81373612d2a8</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description/>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>projects</name>
    </property>
    <property>
      <type/>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>3</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>4944f8c4-514a-4ad0-bae6-f97f48eca815</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>Only show tasks which end before the specified date.</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>to</name>
    </property>
    <property>
      <type>com.xwiki.date.DateType</type>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>4</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>2ed2ab1f-83c1-4d15-9674-c2d08b311356</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue>true</defaultValue>
    </property>
    <property>
      <description>Whether users can modify tasks using the Gantt Diagram UI.</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>readonly</name>
    </property>
    <property>
      <type>java.lang.Boolean</type>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>5</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>d2d9eeb2-04e0-46a7-ad91-68f472c7f2b7</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>The spaces in which to look for tasks, comma separated.</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>spaces</name>
    </property>
    <property>
      <type/>
    </property>
  </object>
  <object>
    <name>TaskManager.GanttMacro.Macro</name>
    <number>6</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>22aae958-b74c-4751-ada4-334cf624f390</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <type>
        <disabled>0</disabled>
        <name>type</name>
        <number>5</number>
        <prettyName>Parameter type</prettyName>
        <size>60</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </type>
    </class>
    <property>
      <defaultValue>true</defaultValue>
    </property>
    <property>
      <description>Hide tasks which have no due date set, and as such cannot be displayed properly in the diagram. If set to false, the default duration of such a task is set to one week.</description>
    </property>
    <property>
      <mandatory>0</mandatory>
    </property>
    <property>
      <name>hideNoDueDate</name>
    </property>
    <property>
      <type>java.lang.Boolean</type>
    </property>
  </object>
</xwikidoc>
